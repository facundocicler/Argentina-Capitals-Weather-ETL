volumes:
  mongo_data:
  mysql_data:
  postgres_data:

networks:
  app-net:
    external: true

services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-net
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: mypassword
      MYSQL_DATABASE: weather
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql      
    networks:
      - app-net
    restart: unless-stopped   

  postgres:
    image: postgres:15
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped  
    networks:
      - app-net

  weather-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: weather-app  
    container_name: weather-app
    depends_on:
      - mongo
      - mysql
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./plugins:/app/plugins
      - ./.env:/opt/airflow/.env  
      - ./tmp:/tmp
    command: ["sleep", "infinity"]
    networks:
      - app-net
    restart: on-failure    

  airflow-init:
    user: "0:0"
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c", "echo 'Esperando que PostgreSQL est√© disponible...'; 
                  airflow db migrate && airflow users create 
                  --username admin 
                  --password admin 
                  --firstname Facundo 
                  --lastname Sicler 
                  --role Admin 
                  --email admin@example.com"]
    environment:
      - AIRFLOW__WEBSERVER__SECRET_KEY=9lYlg5ka7gJfPxLE44_axtsw9tX15ytfw_XsUAheuaE=    
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - PYTHONPATH=/opt/airflow      
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./sql:/opt/airflow/sql      
      - ./.env:/opt/airflow/.env        
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-net

  airflow-webserver:
    user: "0:0"
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    container_name: airflow-webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__WEBSERVER__SECRET_KEY=9lYlg5ka7gJfPxLE44_axtsw9tX15ytfw_XsUAheuaE=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./sql:/opt/airflow/sql      
      - ./.env:/opt/airflow/.env         
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - app-net
    restart: always

  airflow-scheduler:
    user: "0:0"
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__WEBSERVER__SECRET_KEY=9lYlg5ka7gJfPxLE44_axtsw9tX15ytfw_XsUAheuaE=    
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - PYTHONPATH=/opt/airflow      
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./config:/opt/airflow/config
      - ./sql:/opt/airflow/sql      
      - ./.env:/opt/airflow/.env         
      - /var/run/docker.sock:/var/run/docker.sock   
    command: scheduler
    networks:
      - app-net
    restart: always    